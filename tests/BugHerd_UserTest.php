<?php

// Include Library classes
require_once(dirname(__FILE__) . '/../lib/BugHerd/User.php');

/**
 * Test class for BugHerd_User.
 * Generated by PHPUnit on 2012-05-10 at 20:03:50.
 */
class BugHerd_UserTest extends PHPUnit_Framework_TestCase
{


  /**
   * BugHerd_User::setId
   * BugHerd_User::getId
   * BugHerd_User::__get
   * BugHerd_User::__set
   */
  public function testSetId() {
    $user = new BugHerd_User();
    $user->id = 5123;
    $id = $user->id;
    $this->assertEquals(5123, $id);
  }

  /**
   * BugHerd_User::getName
   * BugHerd_User::setName
   * BugHerd_User::__get
   * BugHerd_User::__set
   */
  public function testSetName() {
    $user = new BugHerd_User();
    $user->name = 'name';
    $value = $user->name;
    $this->assertEquals('name', $value);
  }

  /**
   * BugHerd_User::getSurName
   * BugHerd_User::setSurName
   * BugHerd_User::__get
   * BugHerd_User::__set
   */
  public function testSetSurName() {
    $user = new BugHerd_User();
    $user->surname = 'lastname';
    $value = $user->surname;
    $this->assertEquals('lastname', $value);
  }

  /**
   * BugHerd_User::getEmail
   * BugHerd_User::setEmail
   * BugHerd_User::__get
   * BugHerd_User::__set
   */
  public function testSetEmail() {
    $user = new BugHerd_User();
    $user->email = 'email@example.com';
    $value = $user->email;
    $this->assertEquals('email@example.com', $value);
  }

  /**
   * BugHerd_User::getCreated
   * BugHerd_User::setCreated
   * BugHerd_User::__get
   * BugHerd_User::__set
   */
  public function testSetCreated() {
    $user = new BugHerd_User();
    $date =date('c');
    $user->created = $date;
    $value = $user->created;
    $this->assertInstanceOf('DateTime', $value);
  }

  /**
   * BugHerd_User::getUpdated
   * BugHerd_User::setUpdated
   * BugHerd_User::__get
   * BugHerd_User::__set
   */
  public function testSetUpdated() {
    $user = new BugHerd_User();
    $date = date('c');
    $user->updated = $date;
    $value = $user->updated;
    $this->assertInstanceOf('DateTime', $value);
  }

  /**
   * BugHerd_User::toXml
   */
  public function testToXml() {
    $xml = simplexml_load_string('<user></user>');
    $xml->addChild('name', 'name');
    $xml->addChild('surname', 'surname');
    $xml->addChild('email', 'email@example.com');
    $user = new BugHerd_User();
    $user->setName('name');
    $user->setSurName('surname');
    $user->setEmail('email@example.com');
    $user_xml = $user->toXml();
    $this->assertXmlStringEqualsXmlString($xml->asXML(),$user_xml);
  }

  /**
   * BugHerd_User::fromXml
   * BugHerd_User::__get
   */
  public function testFromXml() {
    $xml = simplexml_load_string('<user></user>');
    $xml->addChild('id', 1234);
    $xml->addChild('name', 'name');
    $xml->addChild('surname', 'surname');
    $xml->addChild('email', 'email@example.com');
    $xml->addChild('created-at', date('c'));
    $xml->addChild('updated-at', date('c'));
    $xml = $xml->asXML();
    $user = BugHerd_User::fromXml($xml);
    $this->assertEquals(1234, $user->id);
    $this->assertEquals('name', $user->name);
    $this->assertEquals('surname', $user->surname);
    $this->assertEquals('email@example.com', $user->email);
    $this->assertInstanceOf('DateTime', $user->created);
    $this->assertInstanceOf('DateTime', $user->updated);
  }

  /**
   * BugHerd_User::__set
   * @expectedException InvalidArgumentException
   */
  public function testBadPropertySet(){
    $comment = new BugHerd_User();
    $comment->bad_property = 'value';
  }

  /**
   * BugHerd_User::__get
   * @expectedException InvalidArgumentException
   */
  public function testBadPropertyGet(){
    $comment = new BugHerd_User();
    $value = $comment->bad_property;
  }


  /**
   * BugHerd_User::fromXml
   * @expectedException InvalidArgumentException
   */
  public function testInvalidXml(){
    $xml = 'this is not valid xml';
    $user = BugHerd_User::fromXml($xml);
  }

  /**
   * BugHerd_User::setUpdated
   */
  public function testBadUpdatedDate(){
    $comment = new BugHerd_User();
    $date = 'bad date';
    $comment->updated = $date;
    $value = $comment->updated;
    $this->assertNull($value);
  }

  /**
   * BugHerd_User::setCreated
   */
  public function testBadCreationDate(){
    $comment = new BugHerd_User();
    $date = 'bad date';
    $comment->created = $date;
    $value = $comment->created;
    $this->assertNull($value);
  }

}

